#!/usr/bin/python

# -*- coding: utf-8 -*-
# @Author: Jake Brukhman
# @Date:   2016-07-01 11:44:55
# @Last Modified by:   Jake Brukhman
# @Last Modified time: 2016-07-02 15:07:01

"""CoinFund Command-Line Interface

Usage:
  cf investors
  cf investors add
  cf investors delete [--id=<id>]
  cf instruments
  cf instruments add
  cf instruments delete [--id=<id>]
  cf instruments search
  cf shares [--investor] [--total]
  cf shares add
  cf shares delete [--id=<id>]
  cf projects
  cf vehicles
  cf vehicles add
  cf vehicles delete [--vehicle-id=<id>]
  cf ledger [--kind=<kind>] [--startdate=<YYYY-mm-dd>] [--enddate=<YYYY-mm-dd>] [--instr=<symbol>] [--date=<YYYY-mm-dd>]
  cf ledger import [--file=<file>]
  cf ledger add
  cf ledger delete [--id=<id>]
  cf ledger contributions [--startdate=<YYYY-mm-dd>] [--enddate=<YYYY-mm-dd>] [--total]
  cf ledger expenses [--startdate=<YYYY-mm-dd>] [--enddate=<YYYY-mm-dd>] [--total]
  cf ledger basis [--instr=<symbol>] [--startdate=<YYYY-mm-dd>] [--enddate=<YYYY-mm-dd>] [--date=<YYYY-mm-dd>] [--sale]
  cf ledger inventory [--usecache] [--useinventorycsv=<file>]
  cf ledger fifo [--instr=<symbol>] [--startdate=<YYYY-mm-dd>] [--enddate=<YYYY-mm-dd>] [--tocsv] [--inventorycsv] [--cache] [--usecache] [--useinventorycsv=<file>]
  cf scenario asset_liquidation [--instr=<symbol>] [--useinventorycsv=<file>]

Options:
  -h --help     Show this screen.

"""

from docopt import docopt
from coinfund.dao import CoinfundDao
from coinfund.cli import Dispatcher

import pandas as pd
import yaml
import sys


SETTINGS_FILE         = '.coinfund'                 # name of the settings file
SETTINGS              = {}                          # coinfund-cli global configuration settings
REQUIRED_SETTINGS     = ['database_uri']            # required settings

def import_settings():
  """
  Imports settings from a local file called `.coinfund`. The file is 
  in YAML format and accepts the following settings:

    database_uri: [database uri]    
  """
  global SETTINGS

  # try the settings file
  try:
    fp = open(SETTINGS_FILE, 'r')
  except:
    print('Please create a `%s` settings file.' % SETTINGS_FILE)
    fp.close()
    sys.exit(1)

  # load the settings file
  doc = yaml.load(fp)
  if not doc:
    print('Your `%s` settings file appears to be empty.' % SETTINGS_FILE)
    fp.close()
    sys.exit(1)

  # check required settings
  for setting in REQUIRED_SETTINGS:
    if setting not in doc:
      print('Please provide a `%s` setting.' % setting)
      fp.close()
      sys.exit(1)
      
  # get the settings
  SETTINGS = doc
    
  fp.close()

  pd.set_option('display.max_columns', 500)
  pd.set_option('precision', 6)

def main(args):
  """
  This function translates command arguments into
  underlying function paths.
  """
  dao = CoinfundDao(SETTINGS)
  dispatcher = Dispatcher(dao)
  #try:
  dispatcher.dispatch(args)
  #except Exception as e:
  #  print(e)

if __name__ == '__main__':

  # make sure cli settings are available
  import_settings()

  # parse arguments
  args = docopt(__doc__, version='coinfund-cli 1.0')
  main(args)
 
